<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>MiHo-主题安装和配置详情</title>
      <link href="/2999/11/30/installation-configuration/"/>
      <url>/2999/11/30/installation-configuration/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cloud.minhow.com/images/miho/theme/github-third.jpg" alt="miho"></p><h3 id="一-主题简介"><a href="#一-主题简介" class="headerlink" title="一. 主题简介"></a>一. 主题简介</h3><p>&emsp;&emsp;MiHo 是一款单栏响应式的<a href="https://hexo.io" target="_blank" rel="noopener">Hexo</a>主题；基于 Hexo 3.0+ 制作，兼容移动端浏览；主题的代码托管在<a href="https://github.com/WongMinHo/hexo-theme-miho" target="_blank" rel="noopener">GitHub</a>上，<br>欢迎Star和Fork；如遇到问题或发表建议，可以提<a href="https://github.com/WongMinHo/hexo-theme-miho/issues" target="_blank" rel="noopener">Issues</a>，也可以在博客中留言给我，另外,喜欢的话不妨给个 Star。</p><h3 id="二-安装"><a href="#二-安装" class="headerlink" title="二. 安装"></a>二. 安装</h3><h4 id="2-1-安装主题"><a href="#2-1-安装主题" class="headerlink" title="2.1 安装主题"></a>2.1 安装主题</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/WongMinHo/hexo-theme-miho.git themes/miho</span><br></pre></td></tr></table></figure><p>MiHo 主题需要Hexo 3.0或以上版本，请先升级。</p><h4 id="2-2-更新"><a href="#2-2-更新" class="headerlink" title="2.2 更新"></a>2.2 更新</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/miho</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><h4 id="2-3-依赖安装"><a href="#2-3-依赖安装" class="headerlink" title="2.3 依赖安装"></a>2.3 依赖安装</h4><p>如下依赖如果已经安装，请看配置介绍。</p><h5 id="Json-content"><a href="#Json-content" class="headerlink" title="Json-content"></a>Json-content</h5><p>生成站点文章静态数据，用于站内搜索。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-json-content --save</span><br></pre></td></tr></table></figure></p><h3 id="三-站点配置"><a href="#三-站点配置" class="headerlink" title="三. 站点配置"></a>三. 站点配置</h3><p>站点配置文件<code>_config.yml</code>在hexo根目录下。</p><h4 id="3-1-启用主题"><a href="#3-1-启用主题" class="headerlink" title="3.1 启用主题"></a>3.1 启用主题</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`theme: miho`</span><br></pre></td></tr></table></figure><h4 id="3-2-网站基本配置"><a href="#3-2-网站基本配置" class="headerlink" title="3.2 网站基本配置"></a>3.2 网站基本配置</h4><p>以下配置是站点的全局配置，更多配置，请<a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">查看</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: MinHow<span class="string">'s Blog</span></span><br><span class="line"><span class="string">subtitle: 网站副标题</span></span><br><span class="line"><span class="string">description: 专注 WEB 开发的技术博客</span></span><br><span class="line"><span class="string">author: MinHow</span></span><br><span class="line"><span class="string">language: 网站使用的语言</span></span><br><span class="line"><span class="string">timezone: 网站时区</span></span><br></pre></td></tr></table></figure></p><h4 id="3-3-jsonContent配置"><a href="#3-3-jsonContent配置" class="headerlink" title="3.3 jsonContent配置"></a>3.3 jsonContent配置</h4><p>详细的配置请查看<a href="https://github.com/alexbruno/hexo-generator-json-content" target="_blank" rel="noopener">hexo-generator-json-content</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">jsonContent:</span><br><span class="line">  meta: <span class="literal">false</span></span><br><span class="line">  pages: <span class="literal">false</span></span><br><span class="line">  posts:</span><br><span class="line">    title: <span class="literal">true</span></span><br><span class="line">    date: <span class="literal">true</span></span><br><span class="line">    path: <span class="literal">true</span></span><br><span class="line">    text: <span class="literal">false</span></span><br><span class="line">    raw: <span class="literal">false</span></span><br><span class="line">    content: <span class="literal">false</span></span><br><span class="line">    slug: <span class="literal">false</span></span><br><span class="line">    updated: <span class="literal">false</span></span><br><span class="line">    comments: <span class="literal">false</span></span><br><span class="line">    link: <span class="literal">false</span></span><br><span class="line">    permalink: <span class="literal">false</span></span><br><span class="line">    excerpt: <span class="literal">false</span></span><br><span class="line">    categories: <span class="literal">false</span></span><br><span class="line">    tags: <span class="literal">false</span></span><br></pre></td></tr></table></figure></p><h3 id="四-主题配置"><a href="#四-主题配置" class="headerlink" title="四. 主题配置"></a>四. 主题配置</h3><p>编辑主题配置文件，<code>themes/miho/_config.yml</code>。</p><h4 id="4-1-属性"><a href="#4-1-属性" class="headerlink" title="4.1 属性"></a>4.1 属性</h4><p>下面将介绍几个比较重要的配置。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo-theme-miho</span></span><br><span class="line"><span class="comment"># https://github.com/wongminho/hexo-theme-miho</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Favicon of your site | 网站icon</span></span><br><span class="line">favicon: /favicon.ico</span><br><span class="line"></span><br><span class="line"><span class="comment"># Header</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Keywords of your site | 网站关键字</span></span><br><span class="line">keywords: MinHow,MinHow<span class="string">'s Blog</span></span><br><span class="line"><span class="string"># Head headline | 头部标题</span></span><br><span class="line"><span class="string">header_title: MinHow'</span>s Blog</span><br><span class="line"><span class="comment"># Head description | 头部描述</span></span><br><span class="line">header_description: 一个专注 WEB 开发的技术博客</span><br><span class="line"><span class="comment"># Link to your logo | logo地址</span></span><br><span class="line">logo: images/logo.png</span><br><span class="line"><span class="comment"># Link to your banner_img | 首页banner图地址</span></span><br><span class="line">banner_img: images/banner.jpg</span><br><span class="line"><span class="comment"># Menu setting | 菜单设置</span></span><br><span class="line"><span class="comment">#  name:                  Font Awesome icon | Font Awesome 图标</span></span><br><span class="line"><span class="comment">#    title: Home          Title | 标题</span></span><br><span class="line"><span class="comment">#    url: //minhow.com    Url, absolute or relative path | 链接，绝对或相对路径</span></span><br><span class="line"><span class="comment">#    target: true         Whether to jump out | 是否跳出</span></span><br><span class="line">menu:</span><br><span class="line">  home:</span><br><span class="line">    title: Home</span><br><span class="line">    url: /</span><br><span class="line">    target: <span class="literal">false</span></span><br><span class="line">  archive:</span><br><span class="line">    title: Archives</span><br><span class="line">    url: /archives</span><br><span class="line">    target: <span class="literal">false</span></span><br><span class="line">  user:</span><br><span class="line">    title: About</span><br><span class="line">    url: /about</span><br><span class="line">    target: <span class="literal">false</span></span><br><span class="line"><span class="comment"># Social setting, use to display social information | 社交设置，用来展示社交信息</span></span><br><span class="line"><span class="comment">#  name:                  Font Awesome icon | Font Awesome 图标</span></span><br><span class="line"><span class="comment">#    title: Home          Icon title | 图标标题</span></span><br><span class="line"><span class="comment">#    url: //minhow.com    Url, absolute or relative path | 链接，绝对或相对路径</span></span><br><span class="line"><span class="comment">#    target: true         Whether to jump out | 是否跳出</span></span><br><span class="line">social:</span><br><span class="line">  home:</span><br><span class="line">    title: MinHow</span><br><span class="line">    url: //minhow.com</span><br><span class="line">    target: <span class="literal">true</span></span><br><span class="line">  github:</span><br><span class="line">    title: Github</span><br><span class="line">    url: //github.com/wongminho</span><br><span class="line">    target: <span class="literal">true</span></span><br><span class="line">  weibo:</span><br><span class="line">    title: Weibo</span><br><span class="line">    url: //weibo.com/WongMinHo</span><br><span class="line">    target: <span class="literal">true</span></span><br><span class="line">  twitter:</span><br><span class="line">    title: Twitter</span><br><span class="line">    url: //twitter.com/huangminhow</span><br><span class="line">    target: <span class="literal">true</span></span><br><span class="line">  <span class="comment">#qq:</span></span><br><span class="line">  <span class="comment">#weixin:</span></span><br><span class="line">  <span class="comment">#snapchat:</span></span><br><span class="line">  <span class="comment">#telegram:</span></span><br><span class="line">  <span class="comment">#mail:</span></span><br><span class="line">  <span class="comment">#facebook:</span></span><br><span class="line">  <span class="comment">#google:</span></span><br><span class="line">  <span class="comment">#linkedin:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Content</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Excerpt length | 摘录长度</span></span><br><span class="line">excerpt_length: 190</span><br><span class="line"><span class="comment"># Excerpt link | 摘录链接</span></span><br><span class="line">excerpt_link: more&gt;&gt;</span><br><span class="line"><span class="comment"># New window open link | 新窗口打开文章</span></span><br><span class="line">open_new_link: <span class="literal">false</span></span><br><span class="line"><span class="comment"># Article default cover picture，size：350*150 | 文章默认封面图，尺寸：350*150</span></span><br><span class="line">cover_picture: images/banner.jpg</span><br><span class="line"><span class="comment"># Open background particles | 开启背景粒子</span></span><br><span class="line">open_bg_particle: <span class="literal">true</span></span><br><span class="line"><span class="comment"># Open animation in homepage and head | 开启主页及头部动画</span></span><br><span class="line">open_animation: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Article</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Open toc | 是否开启toc</span></span><br><span class="line">toc: <span class="literal">true</span></span><br><span class="line"><span class="comment"># Open share | 是否开启分享</span></span><br><span class="line">share: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Style customization | 样式定制</span></span><br><span class="line">style:</span><br><span class="line">  <span class="comment"># Main color tone | 主色调</span></span><br><span class="line">  main_color: <span class="string">'#0cc'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Comments | 评论</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 畅言，输入appid和appkey</span></span><br><span class="line">changyan_appid: <span class="literal">false</span></span><br><span class="line">changyan_appkey: <span class="literal">false</span></span><br><span class="line"><span class="comment"># 友言，输入id</span></span><br><span class="line">youyan_id: <span class="literal">false</span></span><br><span class="line"><span class="comment"># disqus</span></span><br><span class="line">disqus: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Analytics | 分析</span></span><br><span class="line"><span class="comment"># 站长分析，输入站点id</span></span><br><span class="line">cnzz_analytics: <span class="literal">false</span></span><br><span class="line"><span class="comment"># 百度分析，输入key值</span></span><br><span class="line">baidu_analytics: <span class="literal">false</span></span><br><span class="line"><span class="comment"># google analytics | google分析</span></span><br><span class="line">google_analytics: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Footer</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Access statistics | “不蒜子”访问量统计</span></span><br><span class="line">access_counter:</span><br><span class="line">  on: <span class="literal">true</span></span><br><span class="line">  site_uv: 总访客数：</span><br><span class="line">  site_pv: 总访问量：</span><br><span class="line"></span><br><span class="line"><span class="comment"># Copyright Information | 版权信息</span></span><br><span class="line">copyright: 2017 MinHow</span><br></pre></td></tr></table></figure></p><h4 id="4-2-文章封面图"><a href="#4-2-文章封面图" class="headerlink" title="4.2 文章封面图"></a>4.2 文章封面图</h4><p>文章默认封面图，尺寸：350*150，当文章基本配置没有<code>cover_picture</code>时才显示。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cover_picture: images/banner.jpg</span><br></pre></td></tr></table></figure></p><h4 id="4-3-开启背景粒子"><a href="#4-3-开启背景粒子" class="headerlink" title="4.3 开启背景粒子"></a>4.3 开启背景粒子</h4><p>是否开启背景粒子。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open_bg_particle: <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><h4 id="4-4-开启主页及头部动画"><a href="#4-4-开启主页及头部动画" class="headerlink" title="4.4 开启主页及头部动画"></a>4.4 开启主页及头部动画</h4><p>是否开启主页及头部动画。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open_animation: true</span><br></pre></td></tr></table></figure></p><h4 id="4-5-评论"><a href="#4-5-评论" class="headerlink" title="4.5 评论"></a>4.5 评论</h4><p>支持畅言、disqus。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 畅言，输入appid和appkey</span></span><br><span class="line">changyan_appid: <span class="literal">false</span></span><br><span class="line">changyan_appkey: <span class="literal">false</span></span><br><span class="line"><span class="comment"># 友言，输入id</span></span><br><span class="line">youyan_id: <span class="literal">false</span></span><br><span class="line"><span class="comment"># disqus</span></span><br><span class="line">disqus: <span class="literal">false</span></span><br></pre></td></tr></table></figure></p><h4 id="4-6-数据统计"><a href="#4-6-数据统计" class="headerlink" title="4.6 数据统计"></a>4.6 数据统计</h4><p>支持站长、百度、google三种数据统计，正确填写配置信息即可。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 站长分析，输入站点id</span></span><br><span class="line">cnzz_analytics: <span class="literal">false</span></span><br><span class="line"><span class="comment"># 百度分析，输入key值</span></span><br><span class="line">baidu_analytics: <span class="literal">false</span></span><br><span class="line"><span class="comment"># google分析</span></span><br><span class="line">google_analytics: <span class="literal">false</span></span><br></pre></td></tr></table></figure></p><h4 id="4-7-文章基本配置"><a href="#4-7-文章基本配置" class="headerlink" title="4.7 文章基本配置"></a>4.7 文章基本配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">date: 2017-06-18</span><br><span class="line">categories: First</span><br><span class="line">author: MinHow</span><br><span class="line">tags:</span><br><span class="line">    - First</span><br><span class="line">    - Second</span><br><span class="line">cover_picture: /images/banner.jpg</span><br><span class="line">---</span><br><span class="line"> MinHow-This is a summary</span><br><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>需要注意<code>tags</code>和摘要的写法，不然首页不能正确显示标签和摘要；</li><li><code>cover_picture</code>文章封面图，不填默认显示<code>_config.yml</code>配置的图片。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 主题 </tag>
            
            <tag> 转 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>TS学习之类</title>
      <link href="/2019/03/02/TS%E5%AD%A6%E4%B9%A0%E4%B9%8B%E7%B1%BB/"/>
      <url>/2019/03/02/TS%E5%AD%A6%E4%B9%A0%E4%B9%8B%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h3 id="定义类"><a href="#定义类" class="headerlink" title="定义类"></a>定义类</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">class Person &#123;</span><br><span class="line">    name: string;   //属性</span><br><span class="line">    constructor(_name: string) &#123;</span><br><span class="line">        this.name = _name;</span><br><span class="line">    &#125;   //构造函数</span><br><span class="line">    sayHello(): string &#123;</span><br><span class="line">        <span class="built_in">return</span> <span class="string">"Hi,everyone"</span></span><br><span class="line">    &#125;   //方法</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">let</span> firstOne = new Person(<span class="string">"Fred"</span>)   //实例化类</span><br></pre></td></tr></table></figure><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><p>继承使用关键字extends，调用父类使用super，子类继承父类的属性和方法，并且子类可以改写父类的属性和方法<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">class Animal &#123;</span><br><span class="line">    name: string;</span><br><span class="line">    constructor(_name: string) &#123;</span><br><span class="line">        this.name = _name;</span><br><span class="line">    &#125;</span><br><span class="line">    skinColour(color: string = <span class="string">"black"</span>): void &#123;</span><br><span class="line">        console.log(`<span class="variable">$&#123;this.name&#125;</span> skin colour is <span class="variable">$&#123;color&#125;</span>`)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Horse extends Animal &#123;</span><br><span class="line">    constructor(name: string) &#123; super(name) &#125;</span><br><span class="line">    skinColour(color: string = <span class="string">"brown"</span>): void &#123;</span><br><span class="line">        console.log(`I<span class="string">'am $&#123;this.name&#125;`);</span></span><br><span class="line"><span class="string">        super.skinColour("brown");</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">let horse = new Horse("horse");</span></span><br><span class="line"><span class="string">horse.skinColour()</span></span><br><span class="line"><span class="string">// I'</span>am horse</span><br><span class="line">// horse skin colour is brown</span><br></pre></td></tr></table></figure></p><h3 id="public、private、protected、readonly"><a href="#public、private、protected、readonly" class="headerlink" title="public、private、protected、readonly"></a>public、private、protected、readonly</h3><h4 id="public"><a href="#public" class="headerlink" title="public"></a>public</h4><p>（不声明默认都为public，也可以显示的设置为public）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">class Person &#123;</span><br><span class="line">    public name: string;   //属性</span><br><span class="line">    public constructor(_name: string) &#123;</span><br><span class="line">        this.name = _name;</span><br><span class="line">    &#125;   //构造函数</span><br><span class="line">    public sayHello(): string &#123;</span><br><span class="line">        <span class="built_in">return</span> <span class="string">"Hi,everyone"</span></span><br><span class="line">    &#125;   //方法</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">let</span> firstOne = new Person(<span class="string">"Fred"</span>)   //实例化类</span><br></pre></td></tr></table></figure></p><h4 id="private"><a href="#private" class="headerlink" title="private"></a>private</h4><p>（private的成员不能被外部访问；比较带有private或protected成员的类型时，两个类型兼容的条件是private或protected的成员必须相同切来至同一个声明（同一个类））<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">class Person &#123;</span><br><span class="line">    private name: string;   </span><br><span class="line">    public constructor(_name: string) &#123;</span><br><span class="line">        this.name = _name;</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Employee &#123;</span><br><span class="line">    private name: string;   </span><br><span class="line">    public constructor(_name: string) &#123;</span><br><span class="line">        this.name = _name;</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">let</span> firstOne = new Person(<span class="string">"Fred"</span>)</span><br><span class="line">console.log(firstOne.name)  //error: Property <span class="string">'name'</span> is private;</span><br><span class="line"><span class="built_in">let</span> lastOne = new Employee(<span class="string">"Fred"</span>)</span><br><span class="line">firstOne = lastOne  // error: Type <span class="string">'Employee'</span> is not assignable to <span class="built_in">type</span> <span class="string">'Person'</span>.Types have separate declarations of a private property <span class="string">'name'</span>.</span><br></pre></td></tr></table></figure></p><h4 id="protected"><a href="#protected" class="headerlink" title="protected"></a>protected</h4><p>（protected和private相似，但protected成员可以在派生类中访问（能被继承，但不能在实例中访问，若构造函数是protected，则不能被实例化，只能被继承））<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">class Person &#123;</span><br><span class="line">    protected name: string;   </span><br><span class="line">    protected constructor(_name: string) &#123;</span><br><span class="line">        this.name = _name;</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Employee extends Person &#123;</span><br><span class="line">    private department: string;   </span><br><span class="line">    public constructor(name: string,department:string) &#123;</span><br><span class="line">        super(name);</span><br><span class="line">        this.department = department;</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">let</span> Bob = new Person;   //error: Constructor of class <span class="string">'Person'</span> is protected</span><br><span class="line"><span class="built_in">let</span> fred = new Employee(<span class="string">"fred"</span>,<span class="string">"test"</span>);</span><br><span class="line">console.log(fred.name)  //error: Property <span class="string">'name'</span> is protected</span><br></pre></td></tr></table></figure></p><h4 id="readonly"><a href="#readonly" class="headerlink" title="readonly"></a>readonly</h4><p>（设置属性为只读，必须在声明时或构造函数里初始化）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">class Person &#123;</span><br><span class="line">    <span class="built_in">readonly</span> name: string;   </span><br><span class="line">    constructor(_name: string) &#123;</span><br><span class="line">        this.name = _name;</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">let</span> fred = new Person(<span class="string">"fred"</span>);</span><br><span class="line">fred.name = <span class="string">"Bob"</span>   //error: Cannot assign to <span class="string">'name'</span> because it is a constant or a <span class="built_in">read</span>-only property.</span><br></pre></td></tr></table></figure></p><h3 id="参数属性"><a href="#参数属性" class="headerlink" title="参数属性"></a>参数属性</h3><p>参数属性通过给构造函数参数添加一个访问限定符来声明（public,private,protected）,把声明和赋值合并至一处<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">class Person &#123;</span><br><span class="line">    constructor(private name: string) &#123; &#125;</span><br><span class="line">    sayHello(): void &#123;</span><br><span class="line">        console.log(`my name is <span class="variable">$&#123;this.name&#125;</span>`)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">let</span> fred = new Person(<span class="string">"fred"</span>);</span><br><span class="line">fred.sayHello() //my name is fred</span><br></pre></td></tr></table></figure></p><h3 id="存取器"><a href="#存取器" class="headerlink" title="存取器"></a>存取器</h3><p>get、set   只带有 get不带有set的存取器自动被推断为readonly<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">let</span> passcode = <span class="string">"secret passcode"</span>;</span><br><span class="line"></span><br><span class="line">class Employee &#123;</span><br><span class="line">    private _fullName: string;</span><br><span class="line"></span><br><span class="line">    get fullName(): string &#123;</span><br><span class="line">        <span class="built_in">return</span> this._fullName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">set</span> fullName(newName: string) &#123;</span><br><span class="line">        <span class="keyword">if</span> (passcode &amp;&amp; passcode == <span class="string">"secret passcode"</span>) &#123;</span><br><span class="line">            this._fullName = newName;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            console.log(<span class="string">"Error: Unauthorized update of employee!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">let</span> employee = new Employee();</span><br><span class="line">employee.fullName = <span class="string">"Bob Smith"</span>;</span><br><span class="line"><span class="keyword">if</span> (employee.fullName) &#123;</span><br><span class="line">    console.log(employee.fullName);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="静态属性"><a href="#静态属性" class="headerlink" title="静态属性"></a>静态属性</h3><p>static，不能被实例访问，在类里面访问时，需要加上类名<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">class Person &#123;</span><br><span class="line">    static height:number = 180;</span><br><span class="line">    constructor(private name: string) &#123; &#125;</span><br><span class="line">    sayHello(): void &#123;</span><br><span class="line">        console.log(`my name is <span class="variable">$&#123;this.name&#125;</span>, I height is <span class="variable">$&#123;Person.height&#125;</span>`)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">let</span> fred = new Person(<span class="string">"fred"</span>);</span><br><span class="line">fred.sayHello() //my name is fred, I height is 180</span><br></pre></td></tr></table></figure></p><h3 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h3><p>abstract，抽象类做为其它派生类的基类使用。 它们一般不会直接被实例化。抽象类中的抽象方法不包含具体实现并且必须在派生类中实现<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">abstract class Person &#123;</span><br><span class="line">    constructor(public name: string) &#123; &#125;</span><br><span class="line">    abstract sayHello():void;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Empoloy extends Person&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span></span>()&#123;</span><br><span class="line">        super(<span class="string">"Fred"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">sayHello</span></span>()&#123;</span><br><span class="line">        console.log(`my name is <span class="variable">$&#123;this.name&#125;</span>`)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">let</span> firstOne = new Empoloy();</span><br><span class="line">firstOne.sayHello();    //my name is Fred</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> Ts </tag>
            
            <tag> 类 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>团队协作</title>
      <link href="/2018/11/05/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/"/>
      <url>/2018/11/05/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="随想随记"><a href="#随想随记" class="headerlink" title="随想随记"></a>随想随记</h3><p>有时候突然会想一些东西,以前是有准备一个小小的笔记本的,用来记录这些随时想起来的事情.不过不知不觉本子就不知放到哪里了.虽然不一定会再去翻看那些曾经写过的东西,也不一定记得写过什么,不过还是想把这些记下来!</p><p>有时候在想问题的时候,直接面对真实的事情内容,不一定做出很有效率的解决办法.往往可以借助比喻的手段把问题点本质化,就像扫除杂叶,只留精华和本质.真正的能力是是否能够准确地去比喻和形象化要思考的事情.</p><p>反思还是有必要的,把之前做的不足的地方,想想哪里做的不太合适.虽然咱们不是十全十美,但也应该去力所能及的把事情做好,这样才可能每次跟好.追求不必很高,只求每次好一点点.</p>]]></content>
      
      
      <categories>
          
          <category> 习惯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 效率 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>http协议为什么要区分 post,get,put,delete</title>
      <link href="/2018/10/31/http%E5%8D%8F%E8%AE%AE%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%8C%BA%E5%88%86-post-get-put-delete/"/>
      <url>/2018/10/31/http%E5%8D%8F%E8%AE%AE%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%8C%BA%E5%88%86-post-get-put-delete/</url>
      
        <content type="html"><![CDATA[<p>工作当中，当后端换人之后，写的接口风格会有所变化，虽然是个人的习惯，但对团队项目来说并不友善。</p><blockquote><p>所有 http 请求，一律用 POST,在业务功能的实现是没有问题的.<br>post,get,put,delete 是标准, 大家都遵循这样的规则. 这样的api对于它人来说一目了然, get就是获取数据, post就是提交数据, put就是更新数据, delete就做删除操作. 如果一律使用post对一个项目组的内部人员来说是没有问题的, 但是对于对外公开的接口就让调用者摸不着头脑了.<br>另外这四种方法还有特殊的用意.<br>GET 请求可被缓存, 请求可保留在浏览器历史记录中, 请求可被收藏为书签, get方法具有Safe特性会影响是否可以快取(post不支持快取)<br>POST 请求不会被缓存, 请求不会保留在浏览器历史记录中, 不能被收藏为书签<br><br>这就是为什么取数据要使用get而不是post. 因为get可以快取, 缓存和保留历史记录及书签等特殊功能.<br>除了上面的4种常见方法还有一个很重要的方法PATCH.</p></blockquote><p><font size="5">RESTFUL API 设计规范了解下</font></p><p><a href="https://segmentfault.com/a/1190000015384373" target="_blank" rel="noopener">segmentfault</a></p><p><a href="https://www.ruanyifeng.com/blog/2018/10/restful-api-best-practices.html" target="_blank" rel="noopener">阮一峰的网络日志</a></p>]]></content>
      
      
      <categories>
          
          <category> http </category>
          
      </categories>
      
      
        <tags>
            
            <tag> http </tag>
            
            <tag> 接口 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>js编写chrome插件</title>
      <link href="/2018/10/11/js%E7%BC%96%E5%86%99chrome%E6%8F%92%E4%BB%B6/"/>
      <url>/2018/10/11/js%E7%BC%96%E5%86%99chrome%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>chrome占用了大部分用电脑的时间,用自定义的chrome插件可以大大提高效率</p><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> 浏览器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> chrome </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>My study habits</title>
      <link href="/2018/10/10/My-study-habits/"/>
      <url>/2018/10/10/My-study-habits/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>&emsp;&emsp;刚开始接触博客，记录一下工作和生活中感觉有用的资料、方法和体会等!以前都是做笔记和在浏览器便签等方法来记录,当然这些也还在用。慢慢会筛选一些内容迁移到博客里，一是可以用做分享，二是可以在编写过程中加深理解。所有内容包括从其他文章看到和通过自己的理解在重新整理和归纳，并在有新的认识的时候会在原有基础上做随时更新。准确度上自我判断，本人并不负责。希望大家能够提供宝贵意见，我将十分感激。</p><p>&emsp;&emsp;目前时间端的一些习惯，也会随时根据个人情况做更改。把习惯记录一下，看到的时候会提醒一下有些什么事还没做。</p><p>&emsp;&emsp;还有个目的，刚接触<a href="https://markdown-zh.readthedocs.io/en/latest/" title="markdown" target="_blank" rel="noopener">markdown</a>,就当练手啦!嘎嘎!</p><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><ul><li>英语的学习，每天看些，如果要想在行业内有更远的发展，英语会成为不可缺少的条件！</li><li>每天浏览的网站主要是<a href="https://segmentfault.com/" title="segmentfault" target="_blank" rel="noopener">segmentfault</a>和<a href="https://www.csdn.net/" title="csdn" target="_blank" rel="noopener">csdn</a>，会花少量时间关注一下感兴趣的文章，坚持下去，日积月累，是会有收获的！</li></ul><ul><li>坚持写文章，把掌握的知识表达出来，目前定的计划是一周两三篇吧！</li><li>技能、学术性等的搜索一般用<a href="https://www.google.com.hk/" title="google" target="_blank" rel="noopener">google</a>，技术问题在<a href="https://stackoverflow.com/" title="stackoverflow" target="_blank" rel="noopener">Stack Overflow</a>上能解决大部分!</li><li>当然做主要的还是工作了，确保工作之余探索和保持一个效率更高的习惯！</li><li>未完待续，持续更新</li></ul>]]></content>
      
      
      <categories>
          
          <category> 习惯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 效率 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>angular2、4为元素绑定事件</title>
      <link href="/2018/10/09/angular2%E3%80%814%E4%B8%BA%E5%85%83%E7%B4%A0%E7%BB%91%E5%AE%9A%E4%BA%8B%E4%BB%B6/"/>
      <url>/2018/10/09/angular2%E3%80%814%E4%B8%BA%E5%85%83%E7%B4%A0%E7%BB%91%E5%AE%9A%E4%BA%8B%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>angular中获取DOM并绑定事件,对DOM操作。</p><a id="more"></a><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">`    constructor(<span class="keyword">private</span> _api: ApiRequest,</span><br><span class="line">            <span class="keyword">private</span> _cookie: CookieService,</span><br><span class="line">            <span class="keyword">public</span> element: ElementRef,</span><br><span class="line">            <span class="keyword">public</span> renderer2: Renderer2,</span><br><span class="line">            <span class="keyword">private</span> _commonService: CommonService,</span><br><span class="line">            <span class="keyword">private</span> _router: Router) &#123;</span><br><span class="line">&#125;`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> `let btn3=this.element.nativeElement.querySelector('#btn3');</span><br><span class="line">    <span class="keyword">this</span>.renderer2.listen(btn3,<span class="string">"click"</span>,()=&gt; &#123;</span><br><span class="line">        <span class="comment">//this.renderer2.setStyle(ul, "background", "blue");</span></span><br><span class="line">        alert(<span class="number">22222</span>);</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> angular </tag>
            
            <tag> DOM操作 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/06/09/hello-world/"/>
      <url>/2018/06/09/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
  
  
</search>
